self.conv1 = nn.Conv2d(3, 32, 3, 1, 0)
        self.BN1 = nn.BatchNorm2d(32)
        self.conv2 = nn.Conv2d(32, 32, 3, 1, 0)
        self.BN2 = nn.BatchNorm2d(32)
        self.conv3 = nn.Conv2d(32, 64, 3, 1, 1)
        self.BN3 = nn.BatchNorm2d(64)
        self.pool1 = nn.MaxPool2d(3, 2)
        self.conv4 = nn.Conv2d(64, 80, 1, 1, 0)
        self.BN4 = nn.BatchNorm2d(80)
        self.conv5 = nn.Conv2d(80, 192, 3, 1, 0)
        self.BN5 = nn.BatchNorm2d(192)
        self.pool2 = nn.MaxPool2d(3,2)
        self.conv6 = nn.Conv2d(192, 64, 1, 1, 0)
        self.BN6 = nn.BatchNorm2d(64)
        self.conv7 = nn.Conv2d(64, 48, 1, 1, 0)
        self.BN7 = nn.BatchNorm2d(48)
        self.conv8 = nn.Conv2d(48, 64, 5, 1, 2)
        self.BN8 = nn.BatchNorm2d(64)
        self.conv9 = nn.Conv2d(64, 96, 1, 1, 0)
        self.BN9 = nn.BatchNorm2d(96)
        self.conv10 = nn.Conv2d(96, 96, 3, 1, 1)
        self.BN10 = nn.BatchNorm2d(96)
        #self.conv11 = nn.Conv2d(512, 512, 3, 1, 1)
        self.pool3 = nn.MaxPool2d(3,2)
        self.avgpool = nn.AdaptiveAvgPool2d((1, 1))
        self.dropout = nn.Dropout(p=0.5)
        self.fc1 = nn.Linear(96, 768)
        self.BN11 = nn.BatchNorm1d(768)
        self.fc2 = nn.Linear(768, 96)
        self.fc3 = nn.Linear(96, 5)


out = F.relu(self.BN1(self.conv1(x)))
        out = F.relu(self.BN2(self.conv2(out)))
        out = self.pool1(out)
        out = F.relu(self.BN3(self.conv3(out)))
        out = F.relu(self.BN4(self.conv4(out)))
        out = self.pool1(out)
        out = F.relu(self.BN5(self.conv5(out)))
        out = F.relu(self.BN6(self.conv6(out)))
        out = self.pool1(out)
        out = F.relu(self.BN7(self.conv7(out)))
        out = F.relu(self.BN8(self.conv8(out)))
        out = self.pool1(out)
        out = F.relu(self.BN9(self.conv9(out)))
        out = F.relu(self.BN10(self.conv10(out)))
        out = self.avgpool(out)
        out = torch.flatten(out,start_dim=1)
        out = F.relu(self.BN11((self.fc1(out))))
        out = self.dropout(out)
        out = F.relu(self.fc2(out))
        out = self.dropout(out)
        out = self.fc3(out)
        return out

1e-3 40epoch
3e-4 10epoch
1e-4 10epoch
1e-5 10epoch 